on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

name: Build Docker Image and Deploy Image to Amazon ECR

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
  test:
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: "Run tests"
        run: mvn test
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: Build
        run: mvn package
      - name: Archive jar
        uses: actions/upload-artifact@v2
        with:
          name: backend-2.4.2.jar
          path: |
            target/backend-2.4.2.jar
  deploy:
    needs: [prepare, build]
    name: build and push docker image
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2
      - name: Download jar
        uses: actions/download-artifact@v2
        with:
          name: backend-2.4.2.jar
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: backend
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:latest"
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: image-pushed
  cleanUp:
      needs: [deploy]
      runs-on: ubuntu-latest
      steps:
        - uses: geekyeggo/delete-artifact@v1
          with:
            name: |
              backend-2.4.2.jar